{
  
    
        "post0": {
            "title": "List Comprehension",
            "content": "In daily work we use list comprehension a looooot. Use it well you can save a lot of time. To begin with, the basic form of Python list comprehension look like this: . list_comp = [x for x in range(10)] print(list_comp) . [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] . it is basically equal to a for loop, and put everything in a list . list_comp = [] for i in range(10): list_comp.append(i) print(list_comp) . [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] . Up to now you may already notice, the main point of using list comprehension is to replace a for loop. Sometime you may want to add a if statment in the loop: . output = [] # assume we want to get a list of even number using for loop for i in range(10): if i % 2 == 0: output.append(i) print(output) . [0, 2, 4, 6, 8] . well...surely you can do it in a cleverer way without a IF statement... . output = [] for i in range(0, 10, 2): output.append(i) print(output) . . [0, 2, 4, 6, 8] . with list comprehension, you can do it in a single line: . output = [x for x in range(10) if x % 2 == 0] print(output) output = [x for x in range(0, 10, 2)] print(output) . [0, 2, 4, 6, 8] [0, 2, 4, 6, 8] . So yes, we can add if statment when needed, here are some more examples to show how powerful of list comprehension is: . data_in = [[1, 2, 3, 4], [5, 6], [7, 8], [9]] data_flat = [y for x in data_in for y in x] print(data_flat) # maybe our task is to grep all dict with attr &#39;name&#39; data_in = [{&#39;name&#39;: &#39;john&#39;}, {&#39;name&#39;: &#39;peter&#39;}, {&#39;person&#39;: &#39;sk&#39;}, {&#39;name&#39;: &#39;mary&#39;}, {&#39;phone&#39;: &#39;12364586225567&#39;}] data_out = [x for x in data_in if x.get(&#39;name&#39;)] print(data_out) # we can even generate a dict using list comprehension (or dict comprehension) keys = [&#39;name&#39;, &#39;age&#39;] values = [[&#39;john&#39;, &#39;10&#39;], [&#39;foo&#39;, &#39;24&#39;], [&#39;may&#39;, &#39;18&#39;]] data_out = [{k: v for k, v in zip(keys, var)} for var in values] print(data_out) . [1, 2, 3, 4, 5, 6, 7, 8, 9] [{&#39;name&#39;: &#39;john&#39;}, {&#39;name&#39;: &#39;peter&#39;}, {&#39;name&#39;: &#39;mary&#39;}] [{&#39;name&#39;: &#39;john&#39;, &#39;age&#39;: &#39;10&#39;}, {&#39;name&#39;: &#39;foo&#39;, &#39;age&#39;: &#39;24&#39;}, {&#39;name&#39;: &#39;may&#39;, &#39;age&#39;: &#39;18&#39;}] . as you can see in the above examples, list comprehension can also do multiple loops to handle / generate complicatied structure. Although it is extremely useful, try not to make a single line tooooo long such that others (or even yourselves!) can not read. .",
            "url": "https://tikuischan.github.io/fastpages_blog/python/2021/03/20/Python-list-comprehension.html",
            "relUrl": "/python/2021/03/20/Python-list-comprehension.html",
            "date": " • Mar 20, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "立法會投票數據統計",
            "content": "立法會會期快將結束，在新一屆立法會選舉開始前，讓我們利用 python 的 pandas 模組統計一下這一屆（第六屆立法會 2016-2020）立法會的投票紀錄。所有紀錄都可以在立法會公開數據庫找到原始數據（xml）。 . 統計分為三部份： . 立法會整體數據分析 | 議員個人投票統計 | 拫據黨派分析投票傾向 | 立法會的投票傾向視像化 (30/6 updated) | 導入 pandas（主要統計模組）, matplotlib（製作圖表用） 及 numpy（計算時有可能會用到）： . import pandas as pd import matplotlib.pyplot as plt import numpy as np import seaborn as sns plt.rcParams[&#39;axes.unicode_minus&#39;]=False sns.set_style(&quot;whitegrid&quot;) sns.set_context(&quot;poster&quot;) sns.set(font=&#39;SimHei&#39;, font_scale=1) . IPython 的指令，把圖表直接顯示在 notebook Output 裡 . %matplotlib inline . 把事先整合好的數據導入： . legco_cm = pd.read_csv(&#39;./cm/legco_cm_summary3.csv&#39;) legco_cm.head() . vote-id vote-date vote-time motion mover mover-type result 梁君彥 涂謹申 梁耀忠 ... overall-vote overall-yes overall-no overall-abstain 梁國雄 羅冠聰 姚松炎 劉小麗 梁頌恆 游蕙禎 . 0 20190515001 | 16/05/2019 | 10:34:10 | 《2019年撥款條例草案》 - 全體委員會審議 - 總目21的修正案 (修正案編號1) | 胡志偉 | Member | Negatived | Present | Absent | Yes | ... | 50 | 16 | 33 | 1 | NaN | NaN | NaN | NaN | NaN | NaN | . 1 20190515002 | 16/05/2019 | 10:39:52 | 縮短點名表決響鐘時間的議案 | 李慧琼 | Member | Passed | Present | Absent | No | ... | 51 | 33 | 18 | 0 | NaN | NaN | NaN | NaN | NaN | NaN | . 2 20190515003 | 16/05/2019 | 10:41:42 | 《2019年撥款條例草案》 - 全體委員會審議 - 總目22的修正案 (修正案編號2) | 鄺俊宇 | Member | Negatived | Present | Absent | Yes | ... | 50 | 18 | 31 | 1 | NaN | NaN | NaN | NaN | NaN | NaN | . 3 20190515004 | 16/05/2019 | 10:43:19 | 《2019年撥款條例草案》 - 全體委員會審議 - 總目33的修正案 (修正案編號3) | 朱凱廸 | Member | Negatived | Present | Absent | Yes | ... | 53 | 11 | 38 | 4 | NaN | NaN | NaN | NaN | NaN | NaN | . 4 20190515005 | 16/05/2019 | 10:44:54 | 《2019年撥款條例草案》 - 全體委員會審議 - 總目42的修正案 (修正案編號4) | 陳志全 | Member | Negatived | Present | Absent | Yes | ... | 53 | 8 | 38 | 7 | NaN | NaN | NaN | NaN | NaN | NaN | . 5 rows × 97 columns . 大概看一下數據，有 ID，日期，時間，動議，動議人，動議種類，結果，地區出席（出席沒投票），地區投票，地區贊成票，地區反對票，地區棄權票，功能組別出席（出席沒投票），投票，贊成票，反對票，棄權票，全體立法會出席（出席沒投票），投票，贊成票，反對票，棄權票，然後就是各個議員在各個動議的投票狀態。 . legco_cm.dtypes . vote-id object vote-date object vote-time object motion object mover object ... 羅冠聰 object 姚松炎 object 劉小麗 object 梁頌恆 object 游蕙禎 object Length: 97, dtype: object . legco_cm.columns . Index([&#39;vote-id&#39;, &#39;vote-date&#39;, &#39;vote-time&#39;, &#39;motion&#39;, &#39;mover&#39;, &#39;mover-type&#39;, &#39;result&#39;, &#39;梁君彥&#39;, &#39;涂謹申&#39;, &#39;梁耀忠&#39;, &#39;石禮謙&#39;, &#39;張宇人&#39;, &#39;李國麟&#39;, &#39;林健鋒&#39;, &#39;黃定光&#39;, &#39;李慧琼&#39;, &#39;陳克勤&#39;, &#39;陳健波&#39;, &#39;梁美芬&#39;, &#39;黃國健&#39;, &#39;葉劉淑儀&#39;, &#39;謝偉俊&#39;, &#39;毛孟靜&#39;, &#39;田北辰&#39;, &#39;何俊賢&#39;, &#39;易志明&#39;, &#39;胡志偉&#39;, &#39;姚思榮&#39;, &#39;馬逢國&#39;, &#39;莫乃光&#39;, &#39;陳志全&#39;, &#39;陳恒鑌&#39;, &#39;梁志祥&#39;, &#39;梁繼昌&#39;, &#39;麥美娟&#39;, &#39;郭家麒&#39;, &#39;郭偉强&#39;, &#39;郭榮鏗&#39;, &#39;張華峰&#39;, &#39;張超雄&#39;, &#39;黃碧雲&#39;, &#39;葉建源&#39;, &#39;葛珮帆&#39;, &#39;廖長江&#39;, &#39;潘兆平&#39;, &#39;蔣麗芸&#39;, &#39;盧偉國&#39;, &#39;鍾國斌&#39;, &#39;楊岳橋&#39;, &#39;尹兆堅&#39;, &#39;朱凱廸&#39;, &#39;吳永嘉&#39;, &#39;何君堯&#39;, &#39;何啟明&#39;, &#39;林卓廷&#39;, &#39;周浩鼎&#39;, &#39;邵家輝&#39;, &#39;邵家臻&#39;, &#39;柯創盛&#39;, &#39;容海恩&#39;, &#39;陳沛然&#39;, &#39;陳振英&#39;, &#39;陳淑莊&#39;, &#39;張國鈞&#39;, &#39;許智峯&#39;, &#39;陸頌雄&#39;, &#39;劉國勳&#39;, &#39;劉業強&#39;, &#39;鄭松泰&#39;, &#39;鄺俊宇&#39;, &#39;譚文豪&#39;, &#39;范國威&#39;, &#39;區諾軒&#39;, &#39;鄭泳舜&#39;, &#39;謝偉銓&#39;, &#39;陳凱欣&#39;, &#39;geo-present&#39;, &#39;geo-vote&#39;, &#39;geo-yes&#39;, &#39;geo-no&#39;, &#39;geo-abstain&#39;, &#39;func-present&#39;, &#39;func-vote&#39;, &#39;func-yes&#39;, &#39;func-no&#39;, &#39;func-abstain&#39;, &#39;overall-present&#39;, &#39;overall-vote&#39;, &#39;overall-yes&#39;, &#39;overall-no&#39;, &#39;overall-abstain&#39;, &#39;梁國雄&#39;, &#39;羅冠聰&#39;, &#39;姚松炎&#39;, &#39;劉小麗&#39;, &#39;梁頌恆&#39;, &#39;游蕙禎&#39;], dtype=&#39;object&#39;) . 1. &#25972;&#39636;&#25237;&#31080;&#32113;&#35336; . - &#21443;&#33287;&#25237;&#31080;&#20154;&#25976;&#32113;&#35336; . 平均一次投票參與人數： . legco_cm[&#39;overall-present&#39;].mean() . 53.443120260021665 . 平均投票人數：（主席不投票、當中亦有連棄權也不選的情況） . legco_cm[&#39;overall-vote&#39;].mean() . 52.24918743228602 . - &#21205;&#35696;&#36890;&#36942;&#29575; . passed = (legco_cm[&#39;result&#39;] == &#39;Passed&#39;).sum() print(f&#39;紀錄動議總數: {legco_cm.shape[0]}&#39;) print(f&#39;獲通過的動議: {passed}&#39;) print(f&#39;總通過率: {passed / legco_cm.shape[0] * 100:.1f}%&#39;) labels = [&#39;Passed&#39;, &#39;Negatived&#39;] size = [passed, legco_cm.shape[0] - passed] fig1, ax1 = plt.subplots() ax1.pie(size, labels=labels, autopct=&#39;%1.1f%%&#39;, startangle=90, textprops={&#39;fontsize&#39;: 20}) ax1.axis(&#39;equal&#39;) ax1.set_title(&#39;For all 923 Motions:&#39;) plt.rcParams[&#39;figure.figsize&#39;] = (10, 10) plt.show() . 紀錄動議總數: 923 獲通過的動議: 271 總通過率: 29.4% . 紀錄中把動議分為立法會成員及公務員兩種。 . legco_cm[&#39;mover-type&#39;].unique() . array([&#39;Member&#39;, &#39;Public Officer&#39;], dtype=object) . member_motion = legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Member&#39;)].result.count() member_motion_passed = legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Member&#39;) &amp; (legco_cm[&#39;result&#39;]==&#39;Passed&#39;)].result.count() gov_motion = legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Public Officer&#39;)].result.count() gov_motion_passed = legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Public Officer&#39;) &amp; (legco_cm[&#39;result&#39;]==&#39;Passed&#39;)].result.count() print(f&quot;由議員提出的議案：{member_motion}，獲得通過：{member_motion_passed}，通過率：{member_motion_passed / member_motion:.3f}&quot;) print(f&quot;由政府提出的議案：{gov_motion}，獲得通過：{gov_motion_passed}，通過率：{gov_motion_passed / gov_motion:.3f}&quot;) # Bar Chart: negatived = [(gov_motion - gov_motion_passed), (member_motion - member_motion_passed)] passed = [gov_motion_passed, member_motion_passed] p1 = plt.bar([0, 1], passed, 0.35, alpha=0.5) p2 = plt.bar([0, 1], negatived, 0.35, bottom=passed, alpha=0.5) plt.ylabel(&#39;Number of Motions&#39;) plt.title(&#39;Number of Motions by Member/Public Officer&#39;) plt.xticks([0, 1], (&#39;Public Officer&#39;, &#39;Members&#39;)) plt.legend((p1[0], p2[0]), (&#39;Passed&#39;, &#39;Negatived&#39;)) plt.rcParams[&#39;figure.figsize&#39;] = (10, 10) plt.show() print(&quot;Alternative: Pie charts&quot;) labels = [&#39;Passed&#39;, &#39;Negatived&#39;] member_size = [member_motion_passed, member_motion - member_motion_passed] gov_size = [gov_motion_passed, gov_motion - gov_motion_passed] fig, ax = plt.subplots(1, 2) fig.subplots_adjust(hspace=0.5, wspace=0.5) ax[1].pie(member_size, labels=labels, autopct=&#39;%1.1f%%&#39;, startangle=90, textprops={&#39;fontsize&#39;: 20}) ax[1].set_title(&#39;Motions by Members&#39;) ax[0].pie(gov_size, labels=labels, autopct=&#39;%1.1f%%&#39;, startangle=0, textprops={&#39;fontsize&#39;: 20}) ax[0].set_title(&#39;Motions by Goverment&#39;) plt.show() . 由議員提出的議案：789，獲得通過：138，通過率：0.175 由政府提出的議案：134，獲得通過：133，通過率：0.993 . Alternative: Pie charts . &#21807;&#19968;&#34987;&#31435;&#27861;&#26371;&#21542;&#27770;&#30001;&#25919;&#24220;&#25552;&#20986;&#30340;&#35696;&#26696; . 投票結果： . oops = legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Public Officer&#39;) &amp; (legco_cm[&#39;result&#39;]==&#39;Negatived&#39;)] oops[[&#39;motion&#39;, &#39;mover&#39;, &#39;overall-vote&#39;, &#39;overall-yes&#39;, &#39;overall-no&#39;]] . motion mover overall-vote overall-yes overall-no . 263 《2017年應課稅品(修訂)條例草案》 - 全體委員會審議 - 食物及衞生局局長的第二組修正... | 食物及衞生局局長 | 41 | 12 | 29 | . 有關動議及發言： https://www.info.gov.hk/gia/general/201802/07/P2018020700996.htm . - &#21205;&#35696;&#25237;&#31080;&#26178;&#38291;&#20998;&#24598; . legco_cm[&#39;vote-date&#39;] = pd.to_datetime(legco_cm[&#39;vote-date&#39;]) legco_cm[&#39;vote-time&#39;] = pd.to_datetime(legco_cm[&#39;vote-time&#39;]).dt.time legco_cm[[&#39;vote-id&#39;, &#39;vote-date&#39;, &#39;vote-time&#39;, &#39;mover-type&#39;, &#39;result&#39;]].head() . vote-id vote-date vote-time mover-type result . 0 20190515001 | 2019-05-16 | 10:34:10 | Member | Negatived | . 1 20190515002 | 2019-05-16 | 10:39:52 | Member | Passed | . 2 20190515003 | 2019-05-16 | 10:41:42 | Member | Negatived | . 3 20190515004 | 2019-05-16 | 10:43:19 | Member | Negatived | . 4 20190515005 | 2019-05-16 | 10:44:54 | Member | Negatived | . 首先看一下政府動議按月份分怖 . legco_cm[&#39;year-month&#39;] = legco_cm[&#39;vote-date&#39;].dt.to_period(&#39;M&#39;) legco_cm[legco_cm[&#39;mover-type&#39;] == &#39;Public Officer&#39;].groupby(&#39;year-month&#39;).size().plot(kind=&#39;bar&#39;) . &lt;matplotlib.axes._subplots.AxesSubplot at 0x12164b710&gt; . 整合起來再看一次... . legco_cm[&#39;month&#39;] = legco_cm[&#39;vote-date&#39;].dt.month legco_cm[legco_cm[&#39;mover-type&#39;] == &#39;Public Officer&#39;].groupby(&#39;month&#39;).size().plot(kind=&#39;bar&#39;) . &lt;matplotlib.axes._subplots.AxesSubplot at 0x12175b690&gt; . 看來大部份政府議案都在5、6、10、11月提出。 . &#28982;&#24460;&#30475;&#19968;&#19979;&#25919;&#24220;&#20027;&#35201;&#26159;&#22312;&#36913;&#24190;&#21205;&#35696;&#25237;&#31080; . legco_cm[&#39;day-of-week&#39;] = legco_cm[&#39;vote-date&#39;].dt.dayofweek legco_cm[legco_cm[&#39;mover-type&#39;] == &#39;Public Officer&#39;].groupby(&#39;day-of-week&#39;).size().plot(kind=&#39;bar&#39;) . &lt;matplotlib.axes._subplots.AxesSubplot at 0x121929650&gt; . 主要是週三、週四，其次是週五。 . &#20877;&#20358;&#30475;&#19968;&#19979;&#25237;&#31080;&#26178;&#38291;&#20998;&#24598; . legco_cm[&#39;hour&#39;] = pd.to_datetime(legco_cm[&#39;vote-time&#39;].astype(&#39;str&#39;)).dt.hour legco_cm[legco_cm[&#39;mover-type&#39;] == &#39;Public Officer&#39;].groupby(&#39;hour&#39;).size().plot(kind=&#39;bar&#39;) . &lt;matplotlib.axes._subplots.AxesSubplot at 0x121b44550&gt; . 看來午飯 （12 時）及晚飯/下班前（18 時）的動議數字比較高.... . - &#31435;&#27861;&#26371;&#20998;&#32068;&#25237;&#31080;&#30340;&#24433;&#38911;&#21147; . 在前面的統計中我們看到由議員提出的動議通過率只有 30% 左右，在這部份的統計我們來看一下分組投票對整體通過率的影響有多大。 . 算一下總體投票贊成高於反對但是被否決的動： . legco_cm[(legco_cm[&#39;overall-yes&#39;] &gt; legco_cm[&#39;overall-no&#39;]) &amp; (legco_cm[&#39;result&#39;] == &#39;Negatived&#39;)].shape[0] . 101 . 佔由議員動議而被否決的 15.51 % . 2. &#35696;&#21729;&#21205;&#35696;&#21450;&#25237;&#31080;&#25976;&#25818;&#32113;&#35336; . 梁頌恆及游蕙禎沒有參與過立法會會議就被取消資格。 . members = [&#39;梁君彥&#39;, &#39;涂謹申&#39;, &#39;梁耀忠&#39;, &#39;石禮謙&#39;, &#39;張宇人&#39;, &#39;李國麟&#39;, &#39;林健鋒&#39;, &#39;黃定光&#39;, &#39;李慧琼&#39;, &#39;陳克勤&#39;, &#39;陳健波&#39;, &#39;梁美芬&#39;, &#39;黃國健&#39;, &#39;葉劉淑儀&#39;, &#39;謝偉俊&#39;, &#39;毛孟靜&#39;, &#39;田北辰&#39;, &#39;何俊賢&#39;, &#39;易志明&#39;, &#39;胡志偉&#39;, &#39;姚思榮&#39;, &#39;馬逢國&#39;, &#39;莫乃光&#39;, &#39;陳志全&#39;, &#39;陳恒鑌&#39;, &#39;梁志祥&#39;, &#39;梁繼昌&#39;, &#39;麥美娟&#39;, &#39;郭家麒&#39;, &#39;郭偉强&#39;, &#39;郭榮鏗&#39;, &#39;張華峰&#39;, &#39;張超雄&#39;, &#39;黃碧雲&#39;, &#39;葉建源&#39;, &#39;葛珮帆&#39;, &#39;廖長江&#39;, &#39;潘兆平&#39;, &#39;蔣麗芸&#39;, &#39;盧偉國&#39;, &#39;鍾國斌&#39;, &#39;楊岳橋&#39;, &#39;尹兆堅&#39;, &#39;朱凱廸&#39;, &#39;吳永嘉&#39;, &#39;何君堯&#39;, &#39;何啟明&#39;, &#39;林卓廷&#39;, &#39;周浩鼎&#39;, &#39;邵家輝&#39;, &#39;邵家臻&#39;, &#39;柯創盛&#39;, &#39;容海恩&#39;, &#39;陳沛然&#39;, &#39;陳振英&#39;, &#39;陳淑莊&#39;, &#39;張國鈞&#39;, &#39;許智峯&#39;, &#39;陸頌雄&#39;, &#39;劉國勳&#39;, &#39;劉業強&#39;, &#39;鄭松泰&#39;, &#39;鄺俊宇&#39;, &#39;譚文豪&#39;, &#39;范國威&#39;, &#39;區諾軒&#39;, &#39;鄭泳舜&#39;, &#39;謝偉銓&#39;, &#39;陳凱欣&#39;, &#39;梁國雄&#39;, &#39;羅冠聰&#39;, &#39;姚松炎&#39;, &#39;劉小麗&#39;] # &#39;梁頌恆&#39;, &#39;游蕙禎&#39; . - &#35696;&#21729;&#30340;&#21205;&#35696;&#25976;&#37327;&#32113;&#35336; . &#26366;&#32147;&#21205;&#35696;&#30340;&#35696;&#21729;&#65306; . print(legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Member&#39;)].mover.unique()) print(len(legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Member&#39;)].mover.unique()), &#39;人&#39;) . [&#39;胡志偉&#39; &#39;李慧琼&#39; &#39;鄺俊宇&#39; &#39;朱凱廸&#39; &#39;陳志全&#39; &#39;區諾軒&#39; &#39;范國威&#39; &#39;林卓廷&#39; &#39;譚文豪&#39; &#39;郭家麒&#39; &#39;楊岳橋&#39; &#39;鄭松泰&#39; &#39;毛孟靜&#39; &#39;葉建源&#39; &#39;許智峯&#39; &#39;尹兆堅&#39; &#39;李國麟&#39; &#39;梁美芬&#39; &#39;梁志祥&#39; &#39;郭偉强&#39; &#39;吳永嘉&#39; &#39;蔣麗芸&#39; &#39;張超雄&#39; &#39;劉小麗&#39; &#39;田北辰&#39; &#39;黃國健&#39; &#39;葉劉淑儀&#39; &#39;張國鈞&#39; &#39;陳恒鑌&#39; &#39;陳克勤&#39; &#39;梁繼昌&#39; &#39;涂謹申&#39; &#39;葛珮帆&#39; &#39;邵家輝&#39; &#39;易志明&#39; &#39;謝偉俊&#39; &#39;陳淑莊&#39; &#39;郭榮鏗&#39; &#39;梁耀忠&#39; &#39;邵家臻&#39; &#39;盧偉國&#39; &#39;謝偉銓&#39; &#39;麥美娟&#39; &#39;柯創盛&#39; &#39;何君堯&#39; &#39;莫乃光&#39; &#39;潘兆平&#39; &#39;周浩鼎&#39; &#39;黃碧雲&#39; &#39;廖長江&#39; &#39;何啟明&#39; &#39;陸頌雄&#39; &#39;容海恩&#39; &#39;陳凱欣&#39; &#39;陳沛然&#39; &#39;姚松炎&#39; &#39;林健鋒&#39; &#39;劉國勳&#39; &#39;張華峰&#39; &#39;羅冠聰&#39; &#39;梁國雄&#39; &#39;張宇人&#39; &#39;姚思榮&#39; &#39;陳健波&#39; &#39;黃定光&#39; &#39;鄭泳舜&#39; &#39;馬逢國&#39; &#39;何俊賢&#39;] 68 人 . 把動議數、通過 / 否決數作成一個圖表 . move_count = legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Member&#39;)].groupby(&#39;mover&#39;).size().reset_index(name=&#39;counts&#39;).sort_values(&#39;counts&#39;) move_pass = legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Member&#39;) &amp; (legco_cm[&#39;result&#39;]==&#39;Passed&#39;)].groupby(&#39;mover&#39;).size().reset_index(name=&#39;passed&#39;) move_neg = legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Member&#39;) &amp; (legco_cm[&#39;result&#39;]==&#39;Negatived&#39;)].groupby(&#39;mover&#39;).size().reset_index(name=&#39;negatived&#39;) move_count = pd.merge(move_count, move_pass, on=&#39;mover&#39;, how=&#39;outer&#39;) move_count = pd.merge(move_count, move_neg, on=&#39;mover&#39;, how=&#39;outer&#39;) move_count[[&#39;passed&#39;, &#39;negatived&#39;]] = move_count[[&#39;passed&#39;, &#39;negatived&#39;]].fillna(0).astype(&#39;int&#39;) plt.rcParams[&#39;figure.figsize&#39;] = (10, 20) inp = np.arange(move_count.shape[0]) p1 = plt.barh(inp, move_count[&#39;passed&#39;], 1, alpha=0.7) p2 = plt.barh(inp, move_count[&#39;negatived&#39;], 1, left=move_count[&#39;passed&#39;], alpha=0.7) plt.title(&#39;Number of Motions by Member&#39;) plt.yticks(inp, move_count[&#39;mover&#39;]) plt.legend((p1[0], p2[0]), (&#39;Passed&#39;, &#39;Negatived&#39;), loc=&#39;center right&#39;) plt.show() . 作圖的話 73 名議員太長不太好看... . - &#35696;&#21729;&#25237;&#31080;&#29575;&#32113;&#35336; . df = pd.DataFrame([legco_cm.groupby(member).size() for member in members]) df.fillna(0).astype(&#39;int&#39;) df[&#39;member&#39;] = members df[&#39;vote_num&#39;] = df.fillna(0)[&#39;Yes&#39;] + df.fillna(0)[&#39;No&#39;] + df.fillna(0)[&#39;Abstain&#39;] df[&#39;vote_rate&#39;] = df[&#39;vote_num&#39;] / (df[&#39;vote_num&#39;] + df.fillna(0)[&#39;Present&#39;] + df.fillna(0)[&#39;Absent&#39;]) * 100 df.sort_values(&#39;vote_rate&#39;).head(10).fillna(0) . Absent Present Abstain No Yes member vote_num vote_rate . 0 24.0 | 899.0 | 0.0 | 0.0 | 0.0 | 梁君彥 | 0.0 | 0.000000 | . 71 189.0 | 0.0 | 7.0 | 49.0 | 62.0 | 姚松炎 | 118.0 | 38.436482 | . 30 472.0 | 1.0 | 22.0 | 112.0 | 316.0 | 郭榮鏗 | 450.0 | 48.754063 | . 3 449.0 | 3.0 | 8.0 | 333.0 | 130.0 | 石禮謙 | 471.0 | 51.029252 | . 1 420.0 | 19.0 | 46.0 | 95.0 | 343.0 | 涂謹申 | 484.0 | 52.437703 | . 60 413.0 | 0.0 | 11.0 | 375.0 | 124.0 | 劉業強 | 510.0 | 55.254605 | . 16 399.0 | 0.0 | 37.0 | 309.0 | 178.0 | 田北辰 | 524.0 | 56.771398 | . 14 380.0 | 2.0 | 18.0 | 329.0 | 194.0 | 謝偉俊 | 541.0 | 58.613218 | . 40 378.0 | 0.0 | 27.0 | 341.0 | 177.0 | 鍾國斌 | 545.0 | 59.046587 | . 5 377.0 | 1.0 | 50.0 | 118.0 | 377.0 | 李國麟 | 545.0 | 59.046587 | . - &#25226;&#25237;&#31080;&#32113;&#35336;&#21644;&#21205;&#35696;&#32113;&#35336;&#32080;&#21512;&#23601;&#25104;&#28858;&#35696;&#21729;&#30340;&#19968;&#20491;&#31777;&#21934;&#25104;&#31309;&#34920; . member_summary = pd.merge(move_count, df[[&#39;Absent&#39;, &#39;Present&#39;, &#39;vote_num&#39;, &#39;vote_rate&#39;, &#39;member&#39;]], right_on=&#39;member&#39;, left_on=&#39;mover&#39;, how=&#39;outer&#39;) member_summary = member_summary.drop(columns=[&#39;mover&#39;]).fillna(0) member_summary.head(10) . counts passed negatived Absent Present vote_num vote_rate member . 0 1.0 | 0.0 | 1.0 | 115.0 | 0.0 | 808.0 | 87.540628 | 何俊賢 | . 1 1.0 | 1.0 | 0.0 | 42.0 | 0.0 | 494.0 | 92.164179 | 鄭泳舜 | . 2 1.0 | 1.0 | 0.0 | 4.0 | 0.0 | 313.0 | 98.738170 | 陳凱欣 | . 3 1.0 | 1.0 | 0.0 | 217.0 | 1.0 | 705.0 | 76.381365 | 張宇人 | . 4 1.0 | 0.0 | 1.0 | 50.0 | 2.0 | 871.0 | 94.366197 | 潘兆平 | . 5 2.0 | 0.0 | 2.0 | 212.0 | 0.0 | 711.0 | 77.031419 | 何君堯 | . 6 2.0 | 1.0 | 1.0 | 130.0 | 1.0 | 792.0 | 85.807151 | 劉國勳 | . 7 2.0 | 1.0 | 1.0 | 328.0 | 0.0 | 595.0 | 64.463705 | 馬逢國 | . 8 2.0 | 2.0 | 0.0 | 339.0 | 0.0 | 584.0 | 63.271939 | 陳沛然 | . 9 2.0 | 1.0 | 1.0 | 64.0 | 1.0 | 858.0 | 92.957746 | 陳健波 | . - &#20491;&#21029;&#35696;&#21729;&#30340;&#34920;&#29694;&#20998;&#26512; . &#21205;&#35696;&#23436;&#20840;&#27794;&#26377;&#29554;&#36890;&#36942;&#30340;&#35696;&#21729; . loser = [] for name in legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Member&#39;)].mover.unique(): if name not in legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Member&#39;) &amp; (legco_cm[&#39;result&#39;]==&#39;Passed&#39;)].mover.unique(): loser.append(name) print(&#39;Loser name list: &#39;, loser) print(len(loser), &#39;人&#39;) . Loser name list: [&#39;朱凱廸&#39;, &#39;陳志全&#39;, &#39;范國威&#39;, &#39;林卓廷&#39;, &#39;楊岳橋&#39;, &#39;鄭松泰&#39;, &#39;許智峯&#39;, &#39;劉小麗&#39;, &#39;涂謹申&#39;, &#39;柯創盛&#39;, &#39;何君堯&#39;, &#39;潘兆平&#39;, &#39;姚松炎&#39;, &#39;羅冠聰&#39;, &#39;梁國雄&#39;, &#39;何俊賢&#39;] 16 人 . member_summary[member_summary[&#39;member&#39;].isin(loser)] . counts passed negatived Absent Present vote_num vote_rate member . 0 1.0 | 0.0 | 1.0 | 115.0 | 0.0 | 808.0 | 87.540628 | 何俊賢 | . 4 1.0 | 0.0 | 1.0 | 50.0 | 2.0 | 871.0 | 94.366197 | 潘兆平 | . 5 2.0 | 0.0 | 2.0 | 212.0 | 0.0 | 711.0 | 77.031419 | 何君堯 | . 13 3.0 | 0.0 | 3.0 | 56.0 | 0.0 | 867.0 | 93.932828 | 柯創盛 | . 15 3.0 | 0.0 | 3.0 | 189.0 | 0.0 | 118.0 | 38.436482 | 姚松炎 | . 42 8.0 | 0.0 | 8.0 | 88.0 | 0.0 | 835.0 | 90.465872 | 鄭松泰 | . 46 11.0 | 0.0 | 11.0 | 52.0 | 0.0 | 364.0 | 87.500000 | 范國威 | . 49 12.0 | 0.0 | 12.0 | 349.0 | 7.0 | 567.0 | 61.430119 | 許智峯 | . 51 15.0 | 0.0 | 15.0 | 220.0 | 6.0 | 697.0 | 75.514626 | 林卓廷 | . 54 17.0 | 0.0 | 17.0 | 249.0 | 7.0 | 667.0 | 72.264355 | 楊岳橋 | . 56 17.0 | 0.0 | 17.0 | 107.0 | 0.0 | 200.0 | 65.146580 | 羅冠聰 | . 58 20.0 | 0.0 | 20.0 | 420.0 | 19.0 | 484.0 | 52.437703 | 涂謹申 | . 61 25.0 | 0.0 | 25.0 | 62.0 | 2.0 | 243.0 | 79.153094 | 劉小麗 | . 62 26.0 | 0.0 | 26.0 | 77.0 | 0.0 | 230.0 | 74.918567 | 梁國雄 | . 66 47.0 | 0.0 | 47.0 | 206.0 | 2.0 | 715.0 | 77.464789 | 朱凱廸 | . 67 150.0 | 0.0 | 150.0 | 70.0 | 5.0 | 848.0 | 91.874323 | 陳志全 | . &#26368;&#23569;&#26377;&#19968;&#20491;&#21205;&#35696;&#29554;&#36890;&#36942;&#30340;&#35696;&#21729; . print(legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Member&#39;) &amp; (legco_cm[&#39;result&#39;]==&#39;Passed&#39;)].mover.unique()) print(len(legco_cm[(legco_cm[&#39;mover-type&#39;]==&#39;Member&#39;) &amp; (legco_cm[&#39;result&#39;]==&#39;Passed&#39;)].mover.unique()), &#39;人&#39;) . [&#39;李慧琼&#39; &#39;李國麟&#39; &#39;梁美芬&#39; &#39;郭偉强&#39; &#39;黃國健&#39; &#39;葉劉淑儀&#39; &#39;張國鈞&#39; &#39;陳恒鑌&#39; &#39;陳克勤&#39; &#39;葛珮帆&#39; &#39;鄺俊宇&#39; &#39;胡志偉&#39; &#39;邵家輝&#39; &#39;易志明&#39; &#39;張超雄&#39; &#39;梁志祥&#39; &#39;梁耀忠&#39; &#39;郭家麒&#39; &#39;區諾軒&#39; &#39;邵家臻&#39; &#39;莫乃光&#39; &#39;周浩鼎&#39; &#39;謝偉俊&#39; &#39;廖長江&#39; &#39;盧偉國&#39; &#39;何啟明&#39; &#39;陸頌雄&#39; &#39;麥美娟&#39; &#39;葉建源&#39; &#39;梁繼昌&#39; &#39;容海恩&#39; &#39;陳凱欣&#39; &#39;謝偉銓&#39; &#39;陳沛然&#39; &#39;黃碧雲&#39; &#39;尹兆堅&#39; &#39;張宇人&#39; &#39;鄭泳舜&#39; &#39;陳淑莊&#39; &#39;劉國勳&#39; &#39;陳健波&#39; &#39;黃定光&#39; &#39;張華峰&#39; &#39;毛孟靜&#39; &#39;譚文豪&#39; &#39;田北辰&#39; &#39;姚思榮&#39; &#39;蔣麗芸&#39; &#39;吳永嘉&#39; &#39;林健鋒&#39; &#39;馬逢國&#39; &#39;郭榮鏗&#39;] 52 人 . member_summary[~member_summary[&#39;member&#39;].isin(loser)] . counts passed negatived Absent Present vote_num vote_rate member . 1 1.0 | 1.0 | 0.0 | 42.0 | 0.0 | 494.0 | 92.164179 | 鄭泳舜 | . 2 1.0 | 1.0 | 0.0 | 4.0 | 0.0 | 313.0 | 98.738170 | 陳凱欣 | . 3 1.0 | 1.0 | 0.0 | 217.0 | 1.0 | 705.0 | 76.381365 | 張宇人 | . 6 2.0 | 1.0 | 1.0 | 130.0 | 1.0 | 792.0 | 85.807151 | 劉國勳 | . 7 2.0 | 1.0 | 1.0 | 328.0 | 0.0 | 595.0 | 64.463705 | 馬逢國 | . 8 2.0 | 2.0 | 0.0 | 339.0 | 0.0 | 584.0 | 63.271939 | 陳沛然 | . 9 2.0 | 1.0 | 1.0 | 64.0 | 1.0 | 858.0 | 92.957746 | 陳健波 | . 10 3.0 | 2.0 | 1.0 | 61.0 | 0.0 | 862.0 | 93.391116 | 姚思榮 | . 11 3.0 | 3.0 | 0.0 | 182.0 | 1.0 | 740.0 | 80.173348 | 廖長江 | . 12 3.0 | 2.0 | 1.0 | 72.0 | 0.0 | 851.0 | 92.199350 | 張國鈞 | . 14 3.0 | 2.0 | 1.0 | 241.0 | 0.0 | 682.0 | 73.889491 | 林健鋒 | . 16 3.0 | 3.0 | 0.0 | 70.0 | 0.0 | 853.0 | 92.416035 | 易志明 | . 17 4.0 | 3.0 | 1.0 | 280.0 | 0.0 | 643.0 | 69.664139 | 葉劉淑儀 | . 18 4.0 | 3.0 | 1.0 | 94.0 | 0.0 | 829.0 | 89.815818 | 容海恩 | . 19 4.0 | 2.0 | 2.0 | 60.0 | 1.0 | 862.0 | 93.391116 | 黃定光 | . 20 4.0 | 2.0 | 2.0 | 98.0 | 7.0 | 818.0 | 88.624052 | 黃國健 | . 21 4.0 | 1.0 | 3.0 | 61.0 | 0.0 | 862.0 | 93.391116 | 周浩鼎 | . 22 4.0 | 2.0 | 2.0 | 377.0 | 1.0 | 545.0 | 59.046587 | 李國麟 | . 23 5.0 | 3.0 | 2.0 | 145.0 | 0.0 | 778.0 | 84.290358 | 陳恒鑌 | . 24 5.0 | 2.0 | 3.0 | 56.0 | 6.0 | 861.0 | 93.282774 | 郭偉强 | . 25 5.0 | 4.0 | 1.0 | 61.0 | 0.0 | 862.0 | 93.391116 | 陳克勤 | . 26 5.0 | 1.0 | 4.0 | 61.0 | 0.0 | 862.0 | 93.391116 | 邵家輝 | . 27 5.0 | 1.0 | 4.0 | 380.0 | 2.0 | 541.0 | 58.613218 | 謝偉俊 | . 28 5.0 | 2.0 | 3.0 | 229.0 | 0.0 | 694.0 | 75.189599 | 蔣麗芸 | . 29 5.0 | 1.0 | 4.0 | 399.0 | 0.0 | 524.0 | 56.771398 | 田北辰 | . 30 5.0 | 1.0 | 4.0 | 87.0 | 0.0 | 836.0 | 90.574215 | 梁志祥 | . 31 6.0 | 3.0 | 3.0 | 179.0 | 0.0 | 744.0 | 80.606717 | 梁美芬 | . 32 6.0 | 3.0 | 3.0 | 317.0 | 0.0 | 606.0 | 65.655471 | 邵家臻 | . 33 6.0 | 5.0 | 1.0 | 82.0 | 6.0 | 835.0 | 90.465872 | 麥美娟 | . 34 6.0 | 2.0 | 4.0 | 81.0 | 6.0 | 836.0 | 90.574215 | 陸頌雄 | . 35 6.0 | 2.0 | 4.0 | 32.0 | 0.0 | 504.0 | 94.029851 | 謝偉銓 | . 36 6.0 | 5.0 | 1.0 | 200.0 | 0.0 | 723.0 | 78.331528 | 吳永嘉 | . 37 7.0 | 1.0 | 6.0 | 304.0 | 0.0 | 619.0 | 67.063922 | 葉建源 | . 38 7.0 | 4.0 | 3.0 | 134.0 | 1.0 | 788.0 | 85.373781 | 張華峰 | . 39 7.0 | 3.0 | 4.0 | 222.0 | 0.0 | 701.0 | 75.947996 | 莫乃光 | . 40 7.0 | 6.0 | 1.0 | 36.0 | 0.0 | 887.0 | 96.099675 | 葛珮帆 | . 41 8.0 | 1.0 | 7.0 | 267.0 | 5.0 | 651.0 | 70.530878 | 鄺俊宇 | . 43 9.0 | 1.0 | 8.0 | 472.0 | 1.0 | 450.0 | 48.754063 | 郭榮鏗 | . 44 9.0 | 7.0 | 2.0 | 38.0 | 6.0 | 832.0 | 94.977169 | 何啟明 | . 45 10.0 | 4.0 | 6.0 | 286.0 | 0.0 | 637.0 | 69.014085 | 梁耀忠 | . 47 11.0 | 1.0 | 10.0 | 141.0 | 26.0 | 756.0 | 81.906826 | 譚文豪 | . 48 11.0 | 7.0 | 4.0 | 11.0 | 0.0 | 912.0 | 98.808234 | 盧偉國 | . 50 13.0 | 2.0 | 11.0 | 326.0 | 15.0 | 582.0 | 63.055255 | 陳淑莊 | . 52 15.0 | 1.0 | 14.0 | 276.0 | 15.0 | 632.0 | 68.472373 | 黃碧雲 | . 53 17.0 | 14.0 | 3.0 | 93.0 | 24.0 | 806.0 | 87.323944 | 李慧琼 | . 55 17.0 | 5.0 | 12.0 | 303.0 | 5.0 | 615.0 | 66.630553 | 尹兆堅 | . 57 19.0 | 4.0 | 15.0 | 302.0 | 3.0 | 618.0 | 66.955580 | 梁繼昌 | . 59 21.0 | 2.0 | 19.0 | 269.0 | 6.0 | 648.0 | 70.205850 | 胡志偉 | . 60 21.0 | 1.0 | 20.0 | 203.0 | 0.0 | 720.0 | 78.006501 | 毛孟靜 | . 63 28.0 | 2.0 | 26.0 | 67.0 | 1.0 | 348.0 | 83.653846 | 區諾軒 | . 64 32.0 | 1.0 | 31.0 | 276.0 | 6.0 | 641.0 | 69.447454 | 郭家麒 | . 65 36.0 | 3.0 | 33.0 | 282.0 | 0.0 | 641.0 | 69.447454 | 張超雄 | . 68 0.0 | 0.0 | 0.0 | 24.0 | 899.0 | 0.0 | 0.000000 | 梁君彥 | . 69 0.0 | 0.0 | 0.0 | 449.0 | 3.0 | 471.0 | 51.029252 | 石禮謙 | . 70 0.0 | 0.0 | 0.0 | 378.0 | 0.0 | 545.0 | 59.046587 | 鍾國斌 | . 71 0.0 | 0.0 | 0.0 | 23.0 | 3.0 | 897.0 | 97.183099 | 陳振英 | . 72 0.0 | 0.0 | 0.0 | 413.0 | 0.0 | 510.0 | 55.254605 | 劉業強 | . &#23436;&#20840;&#27794;&#26377;&#21205;&#35696;&#30340;&#35696;&#21729; . member_summary[member_summary[&#39;counts&#39;] == 0].sort_values([&#39;Absent&#39;], ascending=False) . counts passed negatived Absent Present vote_num vote_rate member . 69 0.0 | 0.0 | 0.0 | 449.0 | 3.0 | 471.0 | 51.029252 | 石禮謙 | . 72 0.0 | 0.0 | 0.0 | 413.0 | 0.0 | 510.0 | 55.254605 | 劉業強 | . 70 0.0 | 0.0 | 0.0 | 378.0 | 0.0 | 545.0 | 59.046587 | 鍾國斌 | . 68 0.0 | 0.0 | 0.0 | 24.0 | 899.0 | 0.0 | 0.000000 | 梁君彥 | . 71 0.0 | 0.0 | 0.0 | 23.0 | 3.0 | 897.0 | 97.183099 | 陳振英 | . 能看得出 劉業強、鍾國斌、石禮謙、不但完全沒動議，連投票率也不到 60% . &#25237;&#31080;&#29575;&#26368;&#39640;&#30340; 10 &#21517;&#35696;&#21729;&#65306; . member_summary.sort_values(&#39;vote_num&#39;, ascending=False).head(10) . counts passed negatived Absent Present vote_num vote_rate member . 48 11.0 | 7.0 | 4.0 | 11.0 | 0.0 | 912.0 | 98.808234 | 盧偉國 | . 71 0.0 | 0.0 | 0.0 | 23.0 | 3.0 | 897.0 | 97.183099 | 陳振英 | . 40 7.0 | 6.0 | 1.0 | 36.0 | 0.0 | 887.0 | 96.099675 | 葛珮帆 | . 4 1.0 | 0.0 | 1.0 | 50.0 | 2.0 | 871.0 | 94.366197 | 潘兆平 | . 13 3.0 | 0.0 | 3.0 | 56.0 | 0.0 | 867.0 | 93.932828 | 柯創盛 | . 25 5.0 | 4.0 | 1.0 | 61.0 | 0.0 | 862.0 | 93.391116 | 陳克勤 | . 10 3.0 | 2.0 | 1.0 | 61.0 | 0.0 | 862.0 | 93.391116 | 姚思榮 | . 19 4.0 | 2.0 | 2.0 | 60.0 | 1.0 | 862.0 | 93.391116 | 黃定光 | . 21 4.0 | 1.0 | 3.0 | 61.0 | 0.0 | 862.0 | 93.391116 | 周浩鼎 | . 26 5.0 | 1.0 | 4.0 | 61.0 | 0.0 | 862.0 | 93.391116 | 邵家輝 | . &#25237;&#31080;&#29575;&#26368;&#20302;&#30340; 10 &#21517;&#35696;&#21729;&#65306; . member_summary.sort_values(&#39;vote_rate&#39;, ascending=True).head(10) . counts passed negatived Absent Present vote_num vote_rate member . 68 0.0 | 0.0 | 0.0 | 24.0 | 899.0 | 0.0 | 0.000000 | 梁君彥 | . 15 3.0 | 0.0 | 3.0 | 189.0 | 0.0 | 118.0 | 38.436482 | 姚松炎 | . 43 9.0 | 1.0 | 8.0 | 472.0 | 1.0 | 450.0 | 48.754063 | 郭榮鏗 | . 69 0.0 | 0.0 | 0.0 | 449.0 | 3.0 | 471.0 | 51.029252 | 石禮謙 | . 58 20.0 | 0.0 | 20.0 | 420.0 | 19.0 | 484.0 | 52.437703 | 涂謹申 | . 72 0.0 | 0.0 | 0.0 | 413.0 | 0.0 | 510.0 | 55.254605 | 劉業強 | . 29 5.0 | 1.0 | 4.0 | 399.0 | 0.0 | 524.0 | 56.771398 | 田北辰 | . 27 5.0 | 1.0 | 4.0 | 380.0 | 2.0 | 541.0 | 58.613218 | 謝偉俊 | . 70 0.0 | 0.0 | 0.0 | 378.0 | 0.0 | 545.0 | 59.046587 | 鍾國斌 | . 22 4.0 | 2.0 | 2.0 | 377.0 | 1.0 | 545.0 | 59.046587 | 李國麟 | . 3. &#26681;&#25818;&#25919;&#40680;&#30340;&#25237;&#31080;&#20998;&#26512; . 從 Wikipedia 上找到各個議員的所屬政黨 . from bs4 import BeautifulSoup . with open(&#39;./party.html&#39;, &#39;r&#39;) as f: party = f.read() party_soup = BeautifulSoup(party, &#39;html.parser&#39;) tr = party_soup.find_all(&#39;tr&#39;) tr_text = [] for i in tr: j = i.text.strip().split(&#39; n n&#39;) a = j[0].split(&#39; n&#39;)[-1] b = j[-1].split(&#39; n&#39;)[0] tr_text.append([a, b]) tr_text.remove([&#39;備註&#39;, &#39;席位&#39;]) tr_text.remove([&#39;懸空&#39;, &#39;&#39;]) for _ in range(3): tr_text.remove([&#39;懸空&#39;, &#39;懸空&#39;]) party_pd = pd.DataFrame(tr_text) # correct error due to format party_pd.loc[party_pd[0] == &#39;吳永嘉&#39;, 1] = &#39;經民聯&#39; party_pd.loc[party_pd[0] == &#39;邵家輝&#39;, 1] = &#39;自由黨&#39; # add missing members missing = pd.DataFrame([{0: &#39;張華峰&#39;, 1: &#39;經民聯&#39;}, {0: &#39;何啟明&#39;, 1: &#39;工聯會&#39;}, {0: &#39;范國威&#39;, 1: &#39;香港本土&#39;}, {0: &#39;區諾軒&#39;, 1: &#39;獨立民主派&#39;}, {0: &#39;梁國雄&#39;, 1: &#39;社民連&#39;}, {0: &#39;羅冠聰&#39;, 1: &#39;眾志&#39;}, {0: &#39;姚松炎&#39;, 1: &#39;專業議政&#39;}, {0: &#39;劉小麗&#39;, 1: &#39;工黨&#39;}, # {0: &#39;梁頌恆&#39;, 1: &#39;青年新政&#39;}, # {0: &#39;游蕙禎&#39;, 1: &#39;青年新政&#39;} ]) party_pd = party_pd.append(missing, ignore_index=True) party_pd.replace(&#39;公民黨/專業議政&#39;, &#39;公民黨&#39;, inplace=True) party_pd.replace(&#39;教協/專業議政&#39;, &#39;專業議政&#39;, inplace=True) party_pd.replace(&#39;民建聯/新界社團聯會&#39;, &#39;民建聯&#39;, inplace=True) party_pd.replace(&#39;新民黨/公民力量&#39;, &#39;新民黨&#39;, inplace=True) party_pd.replace(&#39;公專聯/專業議政&#39;, &#39;公專聯&#39;, inplace=True) party_pd.replace(&#39;經民聯/西九新動力&#39;, &#39;經民聯&#39;, inplace=True) . party_pd[1].unique() . array([&#39;新民黨&#39;, &#39;工聯會&#39;, &#39;民主黨&#39;, &#39;民建聯&#39;, &#39;公民黨&#39;, &#39;經民聯&#39;, &#39;香港本土&#39;, &#39;獨立建制派&#39;, &#39;獨立民主派&#39;, &#39;實政圓桌&#39;, &#39;熱血公民&#39;, &#39;工黨&#39;, &#39;人民力量&#39;, &#39;自由黨&#39;, &#39;專業議政&#39;, &#39;公專聯&#39;, &#39;獨立中間派&#39;, &#39;勞聯&#39;, &#39;新論壇&#39;, &#39;街工&#39;, &#39;社民連&#39;, &#39;眾志&#39;], dtype=object) . party_pd.head() . 0 1 . 0 葉劉淑儀 | 新民黨 | . 1 郭偉强 | 工聯會 | . 2 許智峯 | 民主黨 | . 3 張國鈞 | 民建聯 | . 4 陳淑莊 | 公民黨 | . - &#20197;&#25919;&#40680;&#20316;&#21934;&#20301;&#30340;&#25237;&#31080;&#29575; . member_summary_party = pd.merge(member_summary, party_pd, left_on=&#39;member&#39;, right_on=0, how=&#39;left&#39;) member_summary_party.drop(columns=0, inplace=True) member_summary_party . counts passed negatived Absent Present vote_num vote_rate member 1 . 0 1.0 | 0.0 | 1.0 | 115.0 | 0.0 | 808.0 | 87.540628 | 何俊賢 | 民建聯 | . 1 1.0 | 1.0 | 0.0 | 42.0 | 0.0 | 494.0 | 92.164179 | 鄭泳舜 | 民建聯 | . 2 1.0 | 1.0 | 0.0 | 4.0 | 0.0 | 313.0 | 98.738170 | 陳凱欣 | 獨立建制派 | . 3 1.0 | 1.0 | 0.0 | 217.0 | 1.0 | 705.0 | 76.381365 | 張宇人 | 自由黨 | . 4 1.0 | 0.0 | 1.0 | 50.0 | 2.0 | 871.0 | 94.366197 | 潘兆平 | 勞聯 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | . 68 0.0 | 0.0 | 0.0 | 24.0 | 899.0 | 0.0 | 0.000000 | 梁君彥 | 經民聯 | . 69 0.0 | 0.0 | 0.0 | 449.0 | 3.0 | 471.0 | 51.029252 | 石禮謙 | 經民聯 | . 70 0.0 | 0.0 | 0.0 | 378.0 | 0.0 | 545.0 | 59.046587 | 鍾國斌 | 自由黨 | . 71 0.0 | 0.0 | 0.0 | 23.0 | 3.0 | 897.0 | 97.183099 | 陳振英 | 獨立建制派 | . 72 0.0 | 0.0 | 0.0 | 413.0 | 0.0 | 510.0 | 55.254605 | 劉業強 | 經民聯 | . 73 rows × 9 columns . pty_vote_rate = member_summary_party.groupby(1).vote_rate.mean().sort_values() plt.rcParams[&#39;figure.figsize&#39;] = (10, 10) ax = pty_vote_rate.plot(kind=&#39;barh&#39;, alpha=0.7, title=&#39;各政黨的平均投票率&#39;) ax.set_xlabel(&#39;投票率（％）&#39;) ax.set_ylabel(&quot;政黨&quot;) ax.axvline(x=50, color=&#39;red&#39;, ls=&#39;--&#39;, alpha=1, label=&#39;50%&#39;) . &lt;matplotlib.lines.Line2D at 0x12288eb90&gt; . - &#21508;&#25919;&#40680;&#25237;&#31080;&#30340;&#32113;&#19968;&#24615;&#20998;&#26512; . 為分析各政黨議員投票的統一性，我們先定義一個統一性的分數。 . $$Score = frac{A (Yes - No)^2 + B (Yes - Abstain)^2 + C (No - Abstain)^2}{(Yes + No + Abstain)^2} $$ . Score = 1 為同一次投票內選擇完全一致（不包括缺席），越分散分數越低。 . 就每一次的投票結果而言 Yes 和 No 及 Abstain 是對立的，但 No 和 Abstain 雖然立場有不同但做成結果一致，所以把 Yes-No 和 Yes-Abstain 的比重 (A, B) 設成 2，而 No-Abstain (C) 則設成 0.5。把 function 寫成可以改變比重的模式方便日後（反悔時）調整。 . legco_member_vote = legco_cm[members] def diff_vote(inputList, weight=[2, 2, 0.5]): yes = 0 no = 0 abstain = 0 for vote in inputList: if vote == &#39;Yes&#39;: yes += 1 elif vote == &#39;No&#39;: no += 1 elif vote == &#39;Abstain&#39;: abstain += 1 if (yes**2 + no**2 + abstain**2) &gt; 0: diff = 1 - (weight[0] * 2 * (yes * no) + weight[2] * 2 * (no * abstain) + weight[1] * 2 * (yes * abstain)) / (yes + no + abstain)**2 else: diff = np.nan return diff . 測試： . party_member_list = list(party_pd.groupby(1).get_group(&#39;民建聯&#39;)[0]) test = [] for i in range(legco_member_vote.shape[0]): diff = diff_vote(legco_member_vote[(member for member in legco_member_vote.columns if member in party_member_list)].loc[i]) test.append(diff) legco_cm[&#39;民建聯&#39;] = test print(legco_cm[&#39;民建聯&#39;].describe()) legco_cm[legco_cm[&#39;民建聯&#39;] &lt; 1][[member for member in legco_cm.columns if member in party_member_list]+[&#39;motion&#39;]] . count 923.000000 mean 0.997819 std 0.028279 min 0.479290 25% 1.000000 50% 1.000000 75% 1.000000 max 1.000000 Name: 民建聯, dtype: float64 . 黃定光 李慧琼 陳克勤 何俊賢 陳恒鑌 梁志祥 葛珮帆 蔣麗芸 周浩鼎 柯創盛 張國鈞 劉國勳 鄭泳舜 motion . 97 Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | No | Abstain | Abstain | 根據《立法會(權力及特權)條例》動議的議案 | . 125 Abstain | Yes | Yes | Yes | Yes | Yes | Yes | Yes | Yes | Yes | Yes | Yes | NaN | 縮短點名表決響鐘時間的議案 | . 463 No | No | Yes | No | No | No | No | Absent | Absent | No | No | No | NaN | 《2017年撥款條例草案》 - 全體委員會審議階段 - 總目90的修正案 (修正案編號72) | . 603 No | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Absent | Abstain | Abstain | 郭家麒議員對何君堯議員的「活化強制性公積金」議案作出的修正案 | . 730 Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Abstain | Yes | Yes | 陸頌雄議員對何啟明議員的「全面檢討勞工法例，改善勞工權益」議案作出的修正案 | . 786 Absent | Absent | Yes | Abstain | Yes | Yes | Yes | Yes | Yes | Yes | Absent | Absent | Yes | 修訂《2018年食物攙雜(金屬雜質含量)(修訂)規例》的擬議決議案 | . 828 No | No | No | No | No | No | No | No | No | No | No | No | Yes | 《國歌條例草案》 - 全體委員會審議 - 陳志全議員的第十四及十五項修正案 (修正案編號18... | . 如果每一個政黨都要把投票不一的議題全部列出太貼位置，把迴圈修改為只列出 motion id。同時亦把只有一名立法會議員的政黨除掉。 . party_vote_summary = [] for party in party_pd[1].unique(): party_member_list = list(party_pd.groupby(1).get_group(party)[0]) test = [] diff_list = [] for i in range(legco_member_vote.shape[0]): diff = diff_vote(legco_member_vote[(member for member in legco_member_vote.columns if member in party_member_list)].loc[i]) test.append(diff) if diff &lt; 1: diff_list.append(i) legco_cm[party] = test party_vote = {&#39;party-name&#39;: party, &#39;num-members&#39;: len([member for member in legco_member_vote.columns if member in party_member_list]), &#39;involed-num-motion&#39;: legco_cm[party].count(), &#39;num-motion-not-unify&#39;: len(diff_list), &#39;motion-list&#39;: diff_list, &#39;score-mean&#39;: legco_cm[party].mean(), &#39;score-sd&#39;: legco_cm[party].std() } party_vote_summary.append(party_vote) party_vote_summary_df = pd.DataFrame(party_vote_summary) party_vote_summary_df[party_vote_summary_df[&#39;num-members&#39;] &gt; 1].sort_values(&#39;score-mean&#39;) # print(legco_cm[legco_cm[party] &lt; 1][[member for member in legco_cm.columns if member in party_member_list]+[&#39;motion&#39;]]) . party-name num-members involed-num-motion num-motion-not-unify motion-list score-mean score-sd . 8 獨立民主派 | 4 | 864 | 201 | [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22,... | 0.808489 | 0.364708 | . 7 獨立建制派 | 8 | 918 | 143 | [2, 63, 71, 72, 73, 75, 76, 77, 78, 86, 87, 88... | 0.914695 | 0.234340 | . 15 公專聯 | 2 | 739 | 46 | [8, 35, 45, 48, 93, 94, 110, 167, 211, 272, 29... | 0.951962 | 0.205512 | . 5 經民聯 | 8 | 923 | 69 | [65, 71, 76, 87, 88, 95, 97, 99, 105, 145, 146... | 0.968870 | 0.137125 | . 6 香港本土 | 2 | 751 | 26 | [601, 609, 610, 611, 612, 628, 638, 639, 719, ... | 0.970373 | 0.165945 | . 14 專業議政 | 2 | 639 | 21 | [65, 66, 72, 155, 287, 288, 289, 291, 295, 296... | 0.977700 | 0.138536 | . 11 工黨 | 2 | 727 | 15 | [65, 66, 72, 81, 283, 292, 294, 389, 555, 588,... | 0.987620 | 0.100882 | . 13 自由黨 | 4 | 923 | 14 | [0, 86, 87, 88, 112, 210, 261, 272, 395, 611, ... | 0.992672 | 0.070618 | . 2 民主黨 | 7 | 829 | 9 | [55, 214, 215, 216, 217, 284, 285, 399, 837] | 0.993640 | 0.067003 | . 4 公民黨 | 5 | 877 | 6 | [79, 270, 720, 797, 800, 810] | 0.995634 | 0.055960 | . 3 民建聯 | 13 | 923 | 7 | [97, 125, 463, 603, 730, 786, 828] | 0.997819 | 0.028279 | . 1 工聯會 | 5 | 914 | 3 | [60, 261, 549] | 0.998065 | 0.037059 | . 0 新民黨 | 2 | 867 | 1 | [292] | 0.998847 | 0.033962 | . 可以看到以獨立民主派分歧最大，新民黨最統一（但只有 2 人），其次是工聯會和民建聯。 . party_vote_summary = party_vote_summary_df[party_vote_summary_df[&#39;num-members&#39;] &gt; 1].sort_values(&#39;score-mean&#39;) inp = np.arange(party_vote_summary.shape[0]) plt.barh(inp, party_vote_summary[&#39;score-mean&#39;], alpha=0.7) plt.title(&#39;Voting Score of Parties&#39;) plt.yticks(inp, party_vote_summary[&#39;party-name&#39;]) plt.show() . - &#25509;&#19979;&#20358;&#26681;&#25818; wikipedia &#30340;&#23450;&#32681;&#25226;&#25919;&#40680;&#20998;&#28858;&#27867;&#27665;&#21644;&#24314;&#21046;&#20841;&#22823;&#38499;&#29151;&#20316;&#20998;&#26512; . 分類根據 wikipedia 對建制和泛民的定義 . proBJ = [&#39;民建聯&#39;, &#39;工聯會&#39;, &#39;經民聯&#39;, &#39;自由黨&#39;, &#39;新民黨&#39;, &#39;實政圓桌&#39;, &#39;新論壇&#39;, &#39;勞聯&#39;] proDem = [&#39;民主黨&#39;, &#39;公民黨&#39;, &#39;工黨&#39;, &#39;街工&#39;, &#39;公專聯&#39;, &#39;人民力量&#39;, &#39;社民連&#39;] all_parties = [&#39;新民黨&#39;, &#39;工聯會&#39;, &#39;民主黨&#39;, &#39;民建聯&#39;, &#39;公民黨&#39;, &#39;經民聯&#39;, &#39;香港本土&#39;, &#39;獨立建制派&#39;, &#39;獨立民主派&#39;, &#39;實政圓桌&#39;, &#39;熱血公民&#39;, &#39;工黨&#39;, &#39;人民力量&#39;, &#39;自由黨&#39;, &#39;專業議政&#39;, &#39;公專聯&#39;, &#39;獨立中間派&#39;, &#39;勞聯&#39;, &#39;新論壇&#39;, &#39;街工&#39;, &#39;社民連&#39;, &#39;眾志&#39;] . def getPartyMember(partyList): memberList = [] for party in partyList: memberList += list(party_pd.groupby(1).get_group(party)[0]) return memberList . side_vote_summary = [] side = [{&#39;name&#39;: &#39;建制&#39;, &#39;party-list&#39;: proBJ}, {&#39;name&#39;: &#39;泛民&#39;, &#39;party-list&#39;: proDem}, {&#39;name&#39;: &#39;立法會全體&#39;, &#39;party-list&#39;: all_parties} ] for s in side: party_member_list = getPartyMember(s[&#39;party-list&#39;]) test = [] diff_list = [] for i in range(legco_member_vote.shape[0]): diff = diff_vote(legco_member_vote[(member for member in legco_member_vote.columns if member in party_member_list)].loc[i]) test.append(diff) if diff &lt; 1: diff_list.append(i) legco_cm[s[&#39;name&#39;]] = test party_vote = {&#39;party-name&#39;: s[&#39;name&#39;], &#39;num-members&#39;: len([member for member in legco_member_vote.columns if member in party_member_list]), &#39;involed-num-motion&#39;: legco_cm[s[&#39;name&#39;]].count(), &#39;num-motion-not-unify&#39;: len(diff_list), &#39;motion-list&#39;: diff_list, &#39;score-mean&#39;: legco_cm[s[&#39;name&#39;]].mean(), &#39;score-sd&#39;: legco_cm[s[&#39;name&#39;]].std() } side_vote_summary.append(party_vote) . side_summary_df = pd.DataFrame(side_vote_summary) side_summary_df . party-name num-members involed-num-motion num-motion-not-unify motion-list score-mean score-sd . 0 建制 | 35 | 923 | 219 | [0, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75... | 0.876516 | 0.270388 | . 1 泛民 | 19 | 922 | 339 | [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, ... | 0.759984 | 0.367609 | . 2 立法會全體 | 73 | 923 | 887 | [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,... | 0.271340 | 0.275440 | . inp = np.arange(side_summary_df.shape[0]) plt.bar(inp, side_summary_df[&#39;score-mean&#39;], alpha=0.7) plt.title(&#39;Voting Score of Parties&#39;) plt.xticks(inp, [&#39;建制&#39;, &#39;泛民&#39;, &#39;立法會全體&#39;]) plt.show() . - &#20998;&#26512;&#65306;&#22914;&#26524;... . 在把立法會議員分成建制及泛民兩邊時我們不難發現建制派有著人數上的優勢，如果把獨立建制派也加在內的話總人數達 43 人，也就是 2/3 的總人數。但是把投票並沒有完全統一及缺席也加算在內的話，在議員動議統計也不難發現建制派的動議被否決或是泛民派的動議通過。在這部份我們將探討一下有多少動議是如果泛民派足夠團結/全員出席後有機會改變結果。 . proBJ += [&#39;獨立建制派&#39;] proBjMember = [x for x in members if (member_summary_party[(member_summary_party[&#39;member&#39;] == x)][1].values in proBJ)] proBJPass = np.zeros(legco_member_vote.shape[0]) proBJNeg = np.zeros(legco_member_vote.shape[0]) proBJAbs = np.zeros(legco_member_vote.shape[0]) for i in range(legco_member_vote.shape[0]): p = 0 n = 0 absend = 0 for member in proBjMember: if legco_member_vote[member].iloc[i] in [&#39;No&#39;, &#39;Astain&#39;]: n += 1 elif legco_member_vote[member].iloc[i] == &#39;Yes&#39;: p += 1 else: absend += 1 proBJPass[i] = p proBJNeg[i] = n proBJAbs[i] = absend legco_cm[&#39;Pro-BJ-pass&#39;] = proBJPass legco_cm[&#39;Pro-BJ-neg&#39;] = proBJNeg legco_cm[&#39;Pro-BJ-abs&#39;] = proBJAbs legco_cm[[&#39;Pro-BJ-pass&#39;, &#39;Pro-BJ-neg&#39;, &#39;Pro-BJ-abs&#39;, &#39;overall-yes&#39;, &#39;overall-no&#39;, &#39;result&#39;]].head() . Pro-BJ-pass Pro-BJ-neg Pro-BJ-abs overall-yes overall-no result . 0 0.0 | 32.0 | 11.0 | 16 | 33 | Negatived | . 1 33.0 | 0.0 | 10.0 | 33 | 18 | Passed | . 2 0.0 | 31.0 | 12.0 | 18 | 31 | Negatived | . 3 0.0 | 35.0 | 8.0 | 11 | 38 | Negatived | . 4 0.0 | 35.0 | 8.0 | 8 | 38 | Negatived | . 假如加上獨立民立派 4 名議員，泛民主派議員人數一共 23 人，查看一下有沒有 23 票能改變的議題。我們先把建制派的投票中支持票及反對票差別少於 23 票的動議找出來。（由議員提出的動議需要分組投票才能通過，為簡化過程這部份我們只看由政府提出的動議。） . legco_cm[&#39;pro-BJ-diff&#39;] = abs(legco_cm[&#39;Pro-BJ-pass&#39;] - legco_cm[&#39;Pro-BJ-neg&#39;]) legco_cm[(legco_cm[&#39;pro-BJ-diff&#39;] &lt;= 23) &amp; (legco_cm[&#39;mover-type&#39;] == &#39;Public Officer&#39;)][[&#39;vote-id&#39;, &#39;Pro-BJ-pass&#39;, &#39;Pro-BJ-neg&#39;, &#39;overall-vote&#39;, &#39;overall-yes&#39;, &#39;result&#39;]] . vote-id Pro-BJ-pass Pro-BJ-neg overall-vote overall-yes result . 104 20180328004 | 23.0 | 0.0 | 44 | 44 | Passed | . 263 20180207002 | 7.0 | 21.0 | 41 | 12 | Negatived | . 275 20170524001 | 16.0 | 0.0 | 35 | 34 | Passed | . 276 20170524002 | 16.0 | 0.0 | 35 | 35 | Passed | . 277 20170524003 | 22.0 | 0.0 | 39 | 38 | Passed | . 278 20170524004 | 20.0 | 0.0 | 36 | 35 | Passed | . 279 20170524005 | 20.0 | 0.0 | 37 | 36 | Passed | . 280 20170524006 | 19.0 | 0.0 | 36 | 35 | Passed | . 282 20170524008 | 21.0 | 0.0 | 38 | 38 | Passed | . 560 20170517163 | 23.0 | 0.0 | 38 | 23 | Passed | . 902 20180509067 | 21.0 | 0.0 | 29 | 22 | Passed | . 當中由政府提出的 20170517163 號及 20180509067 號看來是泛民主派有機會以及想要拉倒的動議。 . legco_cm[legco_cm[&#39;vote-id&#39;] == &#39;20170517163&#39;][[&#39;motion&#39;, &#39;mover&#39;, &#39;overall-vote&#39;, &#39;overall-yes&#39;, &#39;Pro-BJ-pass&#39;, &#39;overall-no&#39;]] . motion mover overall-vote overall-yes Pro-BJ-pass overall-no . 560 《2017年撥款條例草案》 - 全體委員會審議階段 - 總目21、22、25、26、28、3... | 財政司司長 | 38 | 23 | 23.0 | 15 | . legco_cm[legco_cm[&#39;vote-id&#39;] == &#39;20180509067&#39;][[&#39;motion&#39;, &#39;mover&#39;, &#39;overall-vote&#39;, &#39;overall-yes&#39;, &#39;Pro-BJ-pass&#39;, &#39;overall-no&#39;]] . motion mover overall-vote overall-yes Pro-BJ-pass overall-no . 902 《2018年撥款條例草案》 - 全體委員會審議 - 總目21、22、28、30、33、44、... | 財政司司長 | 29 | 22 | 21.0 | 5 | . 都是年度撥款條例草案，然而參與投票不足下未能達到想要的結果。（當然在現實建制派發現泛民主派投票人數增加也有動員參加投票的可能，所以並不能說現實上如果泛民主派努力一點團結一點就能成功。在這裡只是以這個假想情況作例子示範一下 pandas 如何幫我們找到想要的數據。） . 4. &#31435;&#27861;&#26371;&#30340;&#25237;&#31080;&#21462;&#21521;&#35222;&#20687;&#21270; . 在這個部份我們試著把各議員的投票傾向分類和視像化。首先我們會用上面提及的評分方法計算議員之間的距離評分，議員之間投票的相似度可以用 heat map 來視像化。然後我們會用 Multidimensional Scaling （MDS）方法把不易看懂的 heat map 轉換成二維坐標圖分析。 . - &#35696;&#21729;&#25237;&#31080;&#36317;&#38626;&#36317;&#38499; . 這裡以之前定義的評分來計算投票距離 （1-Score)，使 0 為最近，投票方向越不同距離越大。 . member_vote = legco_cm[members].drop(columns=&#39;梁君彥&#39;) # drop him as he is the chairman of cm who did not vote at all # This script took more then 30 mins to finish in my notebook... matrix = [] timer = 0 print(str(timer) + &quot;/73&quot;, end=&#39; &#39;) for member1 in member_vote.columns: mem_dict = {} for member2 in member_vote.columns: diff_list = np.zeros(member_vote.shape[0]) for i in range(member_vote.shape[0]): diff = diff_vote(member_vote[[member1, member2]].loc[i]) diff_list[i] = diff mem_dict[member2] = 1 - np.nanmean(diff_list) matrix.append(mem_dict) timer += 1 print(str(timer) + &quot;/73&quot;, end=&#39; &#39;) # just to enusre the program is running print() matrix_df = pd.DataFrame(matrix) . 0/73 1/73 2/73 3/73 4/73 5/73 6/73 7/73 8/73 9/73 10/73 11/73 12/73 13/73 14/73 15/73 16/73 17/73 18/73 19/73 20/73 21/73 22/73 23/73 24/73 25/73 26/73 27/73 28/73 29/73 30/73 31/73 32/73 33/73 34/73 35/73 36/73 37/73 38/73 39/73 40/73 41/73 42/73 43/73 44/73 45/73 46/73 47/73 48/73 49/73 50/73 51/73 52/73 53/73 54/73 55/73 56/73 57/73 58/73 59/73 60/73 61/73 62/73 63/73 64/73 65/73 66/73 67/73 68/73 69/73 70/73 71/73 72/73 . 把 index 換成名字。 . rename_dict = {} i = 0 for member1 in member_vote.columns: rename_dict[i] = member1 i += 1 matrix_df.rename(rename_dict, inplace=True) matrix_df.head() . 涂謹申 梁耀忠 石禮謙 張宇人 李國麟 林健鋒 黃定光 李慧琼 陳克勤 陳健波 ... 譚文豪 范國威 區諾軒 鄭泳舜 謝偉銓 陳凱欣 梁國雄 羅冠聰 姚松炎 劉小麗 . 涂謹申 0.000000 | 0.115141 | 0.304269 | 0.346774 | 0.071321 | 0.368205 | 0.337100 | 0.368750 | 0.370413 | 0.364872 | ... | 0.075898 | 0.080556 | 0.091052 | 0.330251 | 0.350293 | 0.204473 | 0.057258 | 0.039101 | 0.038986 | 0.043582 | . 梁耀忠 0.115141 | 0.000000 | 0.417655 | 0.585812 | 0.143733 | 0.481287 | 0.544711 | 0.564302 | 0.572987 | 0.573562 | ... | 0.081528 | 0.035663 | 0.029078 | 0.477149 | 0.508916 | 0.325403 | 0.018342 | 0.011954 | 0.018321 | 0.013926 | . 石禮謙 0.304269 | 0.417655 | 0.000000 | 0.013654 | 0.310056 | 0.006275 | 0.023687 | 0.023714 | 0.023783 | 0.021216 | ... | 0.425733 | 0.272196 | 0.250389 | 0.012327 | 0.011960 | 0.005426 | 0.089370 | 0.111250 | 0.043986 | 0.125000 | . 張宇人 0.346774 | 0.585812 | 0.013654 | 0.000000 | 0.377481 | 0.021825 | 0.060211 | 0.071266 | 0.072456 | 0.035675 | ... | 0.555459 | 0.333333 | 0.297990 | 0.043147 | 0.028958 | 0.033641 | 0.167197 | 0.142674 | 0.082882 | 0.170354 | . 李國麟 0.071321 | 0.143733 | 0.310056 | 0.377481 | 0.000000 | 0.328125 | 0.348077 | 0.368664 | 0.387472 | 0.390660 | ... | 0.117034 | 0.128582 | 0.136364 | 0.317760 | 0.366373 | 0.275920 | 0.032143 | 0.017988 | 0.021084 | 0.017085 | . 5 rows × 72 columns . 把距陣以 heatmap 展視。（基本上看不出什麼...） . ax = sns.heatmap(matrix_df, vmin=0, vmax=1) . 導入 scikit learn 的 MDS 模組。 . from sklearn.manifold import MDS model = MDS(n_components=2, dissimilarity=&#39;precomputed&#39;, random_state=1) . out = model.fit_transform(matrix_df) member_scatt = pd.DataFrame({&#39;member&#39;: matrix_df.columns, &#39;x&#39;: out[:, 0], &#39;y&#39;: out[:, 1]}) member_scatt = member_scatt.merge(member_summary_party[[&#39;member&#39;, 1]], on=&#39;member&#39;) member_scatt.head() . member x y 1 . 0 涂謹申 | 0.089394 | 0.165066 | 民主黨 | . 1 梁耀忠 | 0.127461 | 0.307847 | 街工 | . 2 石禮謙 | -0.065369 | -0.111455 | 經民聯 | . 3 張宇人 | -0.116345 | -0.132765 | 自由黨 | . 4 李國麟 | 0.126469 | 0.148297 | 獨立民主派 | . plt.rcParams[&#39;figure.figsize&#39;] = (15, 15) sns.scatterplot(member_scatt[&#39;x&#39;], member_scatt[&#39;y&#39;], hue=member_scatt[1], s=100) def label_point(x, y, val, ax): for i in range(len(x)): ax.text(x[i]+.005, y[i]-0.002, str(val[i])) label_point(out[:, 0], out[:, 1], matrix_df.columns, plt.gca()) . 在這個圖可以看出建制派整體的投票比較一致，泛民主派雖然投票傾向遠離建制派，但分怖比較離散。 .",
            "url": "https://tikuischan.github.io/fastpages_blog/project/pandas/sklearn/2020/03/18/legco6thAnalysis.html",
            "relUrl": "/project/pandas/sklearn/2020/03/18/legco6thAnalysis.html",
            "date": " • Mar 18, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Pervious Logs",
          "content": "Nothing here…yet . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://tikuischan.github.io/fastpages_blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://tikuischan.github.io/fastpages_blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}